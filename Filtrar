#todos los valores diferentes a 1, pasan a ser 1, excepto el 0
df['column'] = df['column'].apply(lambda x : 0 if x == 1 else 1

#Tengo un df con columna "eduation" y lo filtro por VALUES
values=["Bachelors","Masters","Doctorate"]
filtered_df = df[df.education.isin(values)]
filtered_df

#quiero el porcentaje de gente con cierta caracteristica. education es la columna, value_counts te cuenta las repeticiones y normalize hace un porcentaje.
df["education"].value_counts(normalize=True)

#selecciona por etiquetas una serie. de paso suma el resultado de las etiquetas.
s[["Bachelors","Masters","Doctorate"]].sum()

#filtro al df por cierto dato.
a = df[df['salary'] == '<=50K']
#tambien puedo hacer:
a = df["hours-per-week"] == 1
b = df[a]

#union de condiciones
planets[planets.year.isin([2008, 2009]) & planets.mass.isnull()]

#sumar los valores de la serie, de ciertos index. 
suma = e.loc["Bachelors"] + e.loc["Masters"] + e.loc["Doctorate"]

#agregar una columna basada en una condicion de otra columna. pone '1' si cumple la condicion y '0' si no la cumple, pero podes poner lo que vos quieras.
df['overweight'] = np.where(df['bmi']>25,'1','0')

#generar una serie y reemplazar la serie por una columna del df que tiene las mismas filas
a = df['bmi'].astype(float)
df['bmi'] = a
